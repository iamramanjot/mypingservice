"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnEncoreTransferInstance = exports.removeEyevinnEncoreTransferInstance = exports.createEyevinnEncoreTransferInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-encore-transfer
 * @description Introducing Encore Transfer - the ultimate service for seamless output transfer in a video processing pipeline. With easy installation and essential environment variables, this service is a game-changer for Open Source Cloud users. Dive into our comprehensive documentation and join our supportive community on Slack. Don't miss out on this opportunity to revolutionize your video workflow with Eyevinn Technology's innovative solution. Get in touch with us for further customization and support options!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnEncoreTransferConfig
 * @property {string} name - Name of encore-transfer
 * @property {string} RedisUrl - RedisUrl
 * @property {string} [RedisQueue] - RedisQueue
 * @property {string} Output - Output
 * @property {string} OscAccessToken - OscAccessToken
 * @property {string} [AwsAccessKeyIdSecret] - AwsAccessKeyIdSecret
 * @property {string} [AwsSecretAccessKeySecret] - AwsSecretAccessKeySecret

 *
 */
/**
 * @typedef {Object} EyevinnEncoreTransfer
 * @property {string} name - Name of the Encore Transfer instance
 * @property {string} url - URL of the Encore Transfer instance
 *
 */
/**
 * Create a new Encore Transfer instance
 *
 * @memberOf eyevinn-encore-transfer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnEncoreTransferConfig} body - Service instance configuration
 * @returns {EyevinnEncoreTransfer} - Service instance
 * @example
 * import { Context, createEyevinnEncoreTransferInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnEncoreTransferInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnEncoreTransferInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-encore-transfer');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-encore-transfer', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-encore-transfer', instance.name, ctx);
    return instance;
}
exports.createEyevinnEncoreTransferInstance = createEyevinnEncoreTransferInstance;
/**
 * Remove a Encore Transfer instance
 *
 * @memberOf eyevinn-encore-transfer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the encore-transfer to be removed
 */
async function removeEyevinnEncoreTransferInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-encore-transfer');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-encore-transfer', name, serviceAccessToken);
}
exports.removeEyevinnEncoreTransferInstance = removeEyevinnEncoreTransferInstance;
/**
 * Get a Encore Transfer instance
 *
 * @memberOf eyevinn-encore-transfer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the encore-transfer to be retrieved
 * @returns {EyevinnEncoreTransfer} - Service instance
 */
async function getEyevinnEncoreTransferInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-encore-transfer');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-encore-transfer', name, serviceAccessToken);
}
exports.getEyevinnEncoreTransferInstance = getEyevinnEncoreTransferInstance;
//# sourceMappingURL=eyevinn-encore-transfer.js.map