"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnChannelEngineBridgeInstance = exports.removeEyevinnChannelEngineBridgeInstance = exports.createEyevinnChannelEngineBridgeInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-channel-engine-bridge
 * @description Channel Engine Bridge enables seamless pushing of FAST channels from FAST Channel Engine to distribution platforms such as AWS MediaPackage and simplifies the process of pushing channels to a wide range of distribution networks.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-Channel-Engine-Bridge.html|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnChannelEngineBridgeConfig
 * @property {string} name - Name of channel-engine-bridge
 * @property {string} Source - URL to source HLS
 * @property {enum} DestType - Type of destination
 * @property {string} DestUrl - Destination URL
 * @property {string} [AwsAccessKeyId] - AwsAccessKeyId
 * @property {string} [AwsSecretAccessKey] - AwsSecretAccessKey
 * @property {string} [AwsRegion] - AwsRegion

 *
 */
/**
 * @typedef {Object} EyevinnChannelEngineBridge
 * @property {string} name - Name of the Channel Engine Bridge instance
 * @property {string} url - URL of the Channel Engine Bridge instance
 *
 */
/**
 * Create a new Channel Engine Bridge instance
 *
 * @memberOf eyevinn-channel-engine-bridge
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnChannelEngineBridgeConfig} body - Service instance configuration
 * @returns {EyevinnChannelEngineBridge} - Service instance
 * @example
 * import { Context, createEyevinnChannelEngineBridgeInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnChannelEngineBridgeInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnChannelEngineBridgeInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-channel-engine-bridge');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-channel-engine-bridge', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-channel-engine-bridge', instance.name, ctx);
    return instance;
}
exports.createEyevinnChannelEngineBridgeInstance = createEyevinnChannelEngineBridgeInstance;
/**
 * Remove a Channel Engine Bridge instance
 *
 * @memberOf eyevinn-channel-engine-bridge
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the channel-engine-bridge to be removed
 */
async function removeEyevinnChannelEngineBridgeInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-channel-engine-bridge');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-channel-engine-bridge', name, serviceAccessToken);
}
exports.removeEyevinnChannelEngineBridgeInstance = removeEyevinnChannelEngineBridgeInstance;
/**
 * Get a Channel Engine Bridge instance
 *
 * @memberOf eyevinn-channel-engine-bridge
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the channel-engine-bridge to be retrieved
 * @returns {EyevinnChannelEngineBridge} - Service instance
 */
async function getEyevinnChannelEngineBridgeInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-channel-engine-bridge');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-channel-engine-bridge', name, serviceAccessToken);
}
exports.getEyevinnChannelEngineBridgeInstance = getEyevinnChannelEngineBridgeInstance;
//# sourceMappingURL=eyevinn-channel-engine-bridge.js.map