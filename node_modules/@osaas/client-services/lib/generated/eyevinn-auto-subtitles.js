"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnAutoSubtitlesInstance = exports.removeEyevinnAutoSubtitlesInstance = exports.createEyevinnAutoSubtitlesInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-auto-subtitles
 * @description Automatically generate subtitles from an input audio or video file using Open AI Whisper.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/Eyevinn/auto-subtitles#endpoints|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnAutoSubtitlesConfig
 * @property {string} name - Name of auto-subtitles
 * @property {string} openaikey - Openaikey
 * @property {string} [awsAccessKeyId] - AwsAccessKeyId
 * @property {string} [awsSecretAccessKey] - AwsSecretAccessKey
 * @property {string} [awsRegion] - AwsRegion
 * @property {string} [s3Endpoint] - S3Endpoint

 *
 */
/**
 * @typedef {Object} EyevinnAutoSubtitles
 * @property {string} name - Name of the Subtitle Generator instance
 * @property {string} url - URL of the Subtitle Generator instance
 *
 */
/**
 * Create a new Subtitle Generator instance
 *
 * @memberOf eyevinn-auto-subtitles
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnAutoSubtitlesConfig} body - Service instance configuration
 * @returns {EyevinnAutoSubtitles} - Service instance
 * @example
 * import { Context, createEyevinnAutoSubtitlesInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnAutoSubtitlesInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnAutoSubtitlesInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-auto-subtitles');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-auto-subtitles', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-auto-subtitles', instance.name, ctx);
    return instance;
}
exports.createEyevinnAutoSubtitlesInstance = createEyevinnAutoSubtitlesInstance;
/**
 * Remove a Subtitle Generator instance
 *
 * @memberOf eyevinn-auto-subtitles
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the generator to be removed
 */
async function removeEyevinnAutoSubtitlesInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-auto-subtitles');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-auto-subtitles', name, serviceAccessToken);
}
exports.removeEyevinnAutoSubtitlesInstance = removeEyevinnAutoSubtitlesInstance;
/**
 * Get a Subtitle Generator instance
 *
 * @memberOf eyevinn-auto-subtitles
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the generator to be retrieved
 * @returns {EyevinnAutoSubtitles} - Service instance
 */
async function getEyevinnAutoSubtitlesInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-auto-subtitles');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-auto-subtitles', name, serviceAccessToken);
}
exports.getEyevinnAutoSubtitlesInstance = getEyevinnAutoSubtitlesInstance;
//# sourceMappingURL=eyevinn-auto-subtitles.js.map