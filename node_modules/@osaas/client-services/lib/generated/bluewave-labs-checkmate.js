"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBluewaveLabsCheckmateInstance = exports.removeBluewaveLabsCheckmateInstance = exports.createBluewaveLabsCheckmateInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace bluewave-labs-checkmate
 * @description Monitor servers effortlessly with Checkmateâ€”a powerful open-source tool for tracking server and website performance. Enjoy real-time alerts, in-depth insights, and manage over 1000 servers seamlessly!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} BluewaveLabsCheckmateConfig
 * @property {string} name - Name of checkmate

 *
 */
/**
 * @typedef {Object} BluewaveLabsCheckmate
 * @property {string} name - Name of the Checkmate instance
 * @property {string} url - URL of the Checkmate instance
 *
 */
/**
 * Create a new Checkmate instance
 *
 * @memberOf bluewave-labs-checkmate
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {BluewaveLabsCheckmateConfig} body - Service instance configuration
 * @returns {BluewaveLabsCheckmate} - Service instance
 * @example
 * import { Context, createBluewaveLabsCheckmateInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createBluewaveLabsCheckmateInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createBluewaveLabsCheckmateInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluewave-labs-checkmate');
    const instance = await (0, client_core_1.createInstance)(ctx, 'bluewave-labs-checkmate', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('bluewave-labs-checkmate', instance.name, ctx);
    return instance;
}
exports.createBluewaveLabsCheckmateInstance = createBluewaveLabsCheckmateInstance;
/**
 * Remove a Checkmate instance
 *
 * @memberOf bluewave-labs-checkmate
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the monitor to be removed
 */
async function removeBluewaveLabsCheckmateInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluewave-labs-checkmate');
    await (0, client_core_1.removeInstance)(ctx, 'bluewave-labs-checkmate', name, serviceAccessToken);
}
exports.removeBluewaveLabsCheckmateInstance = removeBluewaveLabsCheckmateInstance;
/**
 * Get a Checkmate instance
 *
 * @memberOf bluewave-labs-checkmate
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the monitor to be retrieved
 * @returns {BluewaveLabsCheckmate} - Service instance
 */
async function getBluewaveLabsCheckmateInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluewave-labs-checkmate');
    return await (0, client_core_1.getInstance)(ctx, 'bluewave-labs-checkmate', name, serviceAccessToken);
}
exports.getBluewaveLabsCheckmateInstance = getBluewaveLabsCheckmateInstance;
//# sourceMappingURL=bluewave-labs-checkmate.js.map