"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSearxngSearxngInstance = exports.removeSearxngSearxngInstance = exports.createSearxngSearxngInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace searxng-searxng
 * @description Experience the power of privacy with SearXNG, a customizable metasearch engine delivering unmatched confidentiality. Explore the web securely with our easy setup and extensive admin tools.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} SearxngSearxngConfig
 * @property {string} name - Name of searxng
 * @property {string} [AutoComplete] - AutoComplete

 *
 */
/**
 * @typedef {Object} SearxngSearxng
 * @property {string} name - Name of the SearXNG instance
 * @property {string} url - URL of the SearXNG instance
 *
 */
/**
 * Create a new SearXNG instance
 *
 * @memberOf searxng-searxng
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {SearxngSearxngConfig} body - Service instance configuration
 * @returns {SearxngSearxng} - Service instance
 * @example
 * import { Context, createSearxngSearxngInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createSearxngSearxngInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createSearxngSearxngInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('searxng-searxng');
    const instance = await (0, client_core_1.createInstance)(ctx, 'searxng-searxng', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('searxng-searxng', instance.name, ctx);
    return instance;
}
exports.createSearxngSearxngInstance = createSearxngSearxngInstance;
/**
 * Remove a SearXNG instance
 *
 * @memberOf searxng-searxng
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the searxng to be removed
 */
async function removeSearxngSearxngInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('searxng-searxng');
    await (0, client_core_1.removeInstance)(ctx, 'searxng-searxng', name, serviceAccessToken);
}
exports.removeSearxngSearxngInstance = removeSearxngSearxngInstance;
/**
 * Get a SearXNG instance
 *
 * @memberOf searxng-searxng
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the searxng to be retrieved
 * @returns {SearxngSearxng} - Service instance
 */
async function getSearxngSearxngInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('searxng-searxng');
    return await (0, client_core_1.getInstance)(ctx, 'searxng-searxng', name, serviceAccessToken);
}
exports.getSearxngSearxngInstance = getSearxngSearxngInstance;
//# sourceMappingURL=searxng-searxng.js.map