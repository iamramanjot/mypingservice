/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/': {
        /** Say hello */
        get: {
            responses: {
                /** The magical words! */
                200: {
                    schema: string;
                };
            };
        };
    };
    '/filestashinstance': {
        /** List all running filestash instances */
        get: {
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the filestash instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        AdminPassword?: string;
                        ConfigSecret?: string;
                        DropboxClientId?: string;
                        GdriveClientId?: string;
                        GdriveClientSecret?: string;
                    }[];
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
        /** Launch a new filestash instance */
        post: {
            parameters: {
                body: {
                    body?: {
                        /** @description Name of the filestash instance */
                        name: string;
                        AdminPassword?: string;
                        ConfigSecret?: string;
                        DropboxClientId?: string;
                        GdriveClientId?: string;
                        GdriveClientSecret?: string;
                    };
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the filestash instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        AdminPassword?: string;
                        ConfigSecret?: string;
                        DropboxClientId?: string;
                        GdriveClientId?: string;
                        GdriveClientSecret?: string;
                    };
                };
                /** Default Response */
                403: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                409: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/filestashinstance/{id}': {
        /** Obtain status and resource URLs for an filestash instance */
        get: {
            parameters: {
                path: {
                    /** Name of the filestash instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the filestash instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        AdminPassword?: string;
                        ConfigSecret?: string;
                        DropboxClientId?: string;
                        GdriveClientId?: string;
                        GdriveClientSecret?: string;
                    };
                };
                /** Default Response */
                404: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
        /** Stop and remove an filestash instance */
        delete: {
            parameters: {
                path: {
                    /** Name of the filestash instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                204: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/health/{id}': {
        /** Return status of filestash instance */
        get: {
            parameters: {
                path: {
                    /** Name of the filestash instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @enum {string} */
                        status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/logs/{id}': {
        /** Return the latest logs from the filestash instance */
        get: {
            parameters: {
                query: {
                    timestamps?: boolean;
                    sinceSeconds?: number;
                };
                path: {
                    /** Name of the filestash instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/ports/{id}': {
        /** Return the exposed extra ports for filestash instance */
        get: {
            parameters: {
                path: {
                    /** Name of the filestash instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        externalIp: string;
                        externalPort: number;
                        internalPort: number;
                    }[];
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
}
export interface definitions {
}
export interface operations {
}
export interface external {
}
export type MickaelKerjeanFilestash = paths['/filestashinstance/{id}']['get']['responses']['200']['schema'];
export type MickaelKerjeanFilestashConfig = paths['/filestashinstance']['post']['parameters']['body']['body'];
import { Context } from '@osaas/client-core';
/**
 * @namespace mickael-kerjean-filestash
 * @description Transform your data management with Filestash, a versatile file manager that integrates seamlessly with multiple cloud services and protocols. Enjoy blazing speed, user-friendly interfaces, and plugin flexibility.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-Filestash.html|Online docs} for further information
 */
/**
 * @typedef {Object} MickaelKerjeanFilestashConfig
 * @property {string} name - Name of filestash
 * @property {string} [AdminPassword] - AdminPassword
 * @property {string} [ConfigSecret] - ConfigSecret
 * @property {string} [DropboxClientId] - DropboxClientId
 * @property {string} [GdriveClientId] - GdriveClientId
 * @property {string} [GdriveClientSecret] - GdriveClientSecret

 *
 */
/**
 * @typedef {Object} MickaelKerjeanFilestash
 * @property {string} name - Name of the Filestash instance
 * @property {string} url - URL of the Filestash instance
 *
 */
/**
 * Create a new Filestash instance
 *
 * @memberOf mickael-kerjean-filestash
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {MickaelKerjeanFilestashConfig} body - Service instance configuration
 * @returns {MickaelKerjeanFilestash} - Service instance
 * @example
 * import { Context, createMickaelKerjeanFilestashInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createMickaelKerjeanFilestashInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
export declare function createMickaelKerjeanFilestashInstance(ctx: Context, body: MickaelKerjeanFilestashConfig): Promise<MickaelKerjeanFilestash>;
/**
 * Remove a Filestash instance
 *
 * @memberOf mickael-kerjean-filestash
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the filestash to be removed
 */
export declare function removeMickaelKerjeanFilestashInstance(ctx: Context, name: string): Promise<void>;
/**
 * Get a Filestash instance
 *
 * @memberOf mickael-kerjean-filestash
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the filestash to be retrieved
 * @returns {MickaelKerjeanFilestash} - Service instance
 */
export declare function getMickaelKerjeanFilestashInstance(ctx: Context, name: string): Promise<MickaelKerjeanFilestash>;
//# sourceMappingURL=mickael-kerjean-filestash.d.ts.map