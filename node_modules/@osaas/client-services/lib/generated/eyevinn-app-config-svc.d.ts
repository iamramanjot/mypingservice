/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/': {
        /** Say hello */
        get: {
            responses: {
                /** The magical words! */
                200: {
                    schema: string;
                };
            };
        };
    };
    '/app-config-svcinstance': {
        /** List all running app-config-svc instances */
        get: {
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the app-config-svc instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        RedisUrl: string;
                    }[];
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
        /** Launch a new app-config-svc instance */
        post: {
            parameters: {
                body: {
                    body?: {
                        /** @description Name of the app-config-svc instance */
                        name: string;
                        RedisUrl: string;
                    };
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the app-config-svc instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        RedisUrl: string;
                    };
                };
                /** Default Response */
                403: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                409: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/app-config-svcinstance/{id}': {
        /** Obtain status and resource URLs for an app-config-svc instance */
        get: {
            parameters: {
                path: {
                    /** Name of the app-config-svc instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the app-config-svc instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                        RedisUrl: string;
                    };
                };
                /** Default Response */
                404: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
        /** Stop and remove an app-config-svc instance */
        delete: {
            parameters: {
                path: {
                    /** Name of the app-config-svc instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                204: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/health/{id}': {
        /** Return status of app-config-svc instance */
        get: {
            parameters: {
                path: {
                    /** Name of the app-config-svc instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @enum {string} */
                        status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
                    };
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/logs/{id}': {
        /** Return the latest logs from the app-config-svc instance */
        get: {
            parameters: {
                query: {
                    timestamps?: boolean;
                    sinceSeconds?: number;
                };
                path: {
                    /** Name of the app-config-svc instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
    '/ports/{id}': {
        /** Return the exposed extra ports for app-config-svc instance */
        get: {
            parameters: {
                path: {
                    /** Name of the app-config-svc instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        externalIp: string;
                        externalPort: number;
                        internalPort: number;
                    }[];
                };
                /** Default Response */
                500: {
                    schema: {
                        /** @description Reason why something failed */
                        reason: string;
                    };
                };
            };
        };
    };
}
export interface definitions {
}
export interface operations {
}
export interface external {
}
export type EyevinnAppConfigSvc = paths['/app-config-svcinstance/{id}']['get']['responses']['200']['schema'];
export type EyevinnAppConfigSvcConfig = paths['/app-config-svcinstance']['post']['parameters']['body']['body'];
import { Context } from '@osaas/client-core';
/**
 * @namespace eyevinn-app-config-svc
 * @description Supercharge your application's efficiency by instantly providing configuration values with our Application Configuration Service. Integrate seamlessly with Redis, leverage cache control, and scale effortlessly.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnAppConfigSvcConfig
 * @property {string} name - Name of app-config-svc
 * @property {string} RedisUrl - RedisUrl

 *
 */
/**
 * @typedef {Object} EyevinnAppConfigSvc
 * @property {string} name - Name of the Application Config Service instance
 * @property {string} url - URL of the Application Config Service instance
 *
 */
/**
 * Create a new Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnAppConfigSvcConfig} body - Service instance configuration
 * @returns {EyevinnAppConfigSvc} - Service instance
 * @example
 * import { Context, createEyevinnAppConfigSvcInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnAppConfigSvcInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
export declare function createEyevinnAppConfigSvcInstance(ctx: Context, body: EyevinnAppConfigSvcConfig): Promise<EyevinnAppConfigSvc>;
/**
 * Remove a Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the config-service to be removed
 */
export declare function removeEyevinnAppConfigSvcInstance(ctx: Context, name: string): Promise<void>;
/**
 * Get a Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the config-service to be retrieved
 * @returns {EyevinnAppConfigSvc} - Service instance
 */
export declare function getEyevinnAppConfigSvcInstance(ctx: Context, name: string): Promise<EyevinnAppConfigSvc>;
//# sourceMappingURL=eyevinn-app-config-svc.d.ts.map