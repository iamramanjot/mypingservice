"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDrawdbIoDrawdbInstance = exports.removeDrawdbIoDrawdbInstance = exports.createDrawdbIoDrawdbInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace drawdb-io-drawdb
 * @description Effortlessly design and manage your database schema with drawDB. It's a user-friendly online DBER editor that lets you create diagrams and generate SQL without any hassle, all directly in your browser!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} DrawdbIoDrawdbConfig
 * @property {string} name - Name of drawdb

 *
 */
/**
 * @typedef {Object} DrawdbIoDrawdb
 * @property {string} name - Name of the drawDB instance
 * @property {string} url - URL of the drawDB instance
 *
 */
/**
 * Create a new drawDB instance
 *
 * @memberOf drawdb-io-drawdb
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {DrawdbIoDrawdbConfig} body - Service instance configuration
 * @returns {DrawdbIoDrawdb} - Service instance
 * @example
 * import { Context, createDrawdbIoDrawdbInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createDrawdbIoDrawdbInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createDrawdbIoDrawdbInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('drawdb-io-drawdb');
    const instance = await (0, client_core_1.createInstance)(ctx, 'drawdb-io-drawdb', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('drawdb-io-drawdb', instance.name, ctx);
    return instance;
}
exports.createDrawdbIoDrawdbInstance = createDrawdbIoDrawdbInstance;
/**
 * Remove a drawDB instance
 *
 * @memberOf drawdb-io-drawdb
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the editor to be removed
 */
async function removeDrawdbIoDrawdbInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('drawdb-io-drawdb');
    await (0, client_core_1.removeInstance)(ctx, 'drawdb-io-drawdb', name, serviceAccessToken);
}
exports.removeDrawdbIoDrawdbInstance = removeDrawdbIoDrawdbInstance;
/**
 * Get a drawDB instance
 *
 * @memberOf drawdb-io-drawdb
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the editor to be retrieved
 * @returns {DrawdbIoDrawdb} - Service instance
 */
async function getDrawdbIoDrawdbInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('drawdb-io-drawdb');
    return await (0, client_core_1.getInstance)(ctx, 'drawdb-io-drawdb', name, serviceAccessToken);
}
exports.getDrawdbIoDrawdbInstance = getDrawdbIoDrawdbInstance;
//# sourceMappingURL=drawdb-io-drawdb.js.map