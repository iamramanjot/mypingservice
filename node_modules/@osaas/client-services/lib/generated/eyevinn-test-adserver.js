"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnTestAdserverInstance = exports.removeEyevinnTestAdserverInstance = exports.createEyevinnTestAdserverInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-test-adserver
 * @description Eyevinn Test Adserver is the ultimate solution for testing CSAI/SSAI stitching and tracking implementation. Open source, easy to use, and flexible for various use cases. Get it now and experience seamless testing!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/Eyevinn/test-adserver|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnTestAdserverConfig
 * @property {string} name - Name of test-adserver
 * @property {string} [MrssOrigin] - MrssOrigin

 *
 */
/**
 * @typedef {Object} EyevinnTestAdserver
 * @property {string} name - Name of the Test Adserver instance
 * @property {string} url - URL of the Test Adserver instance
 *
 */
/**
 * Create a new Test Adserver instance
 *
 * @memberOf eyevinn-test-adserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnTestAdserverConfig} body - Service instance configuration
 * @returns {EyevinnTestAdserver} - Service instance
 * @example
 * import { Context, createEyevinnTestAdserverInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnTestAdserverInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnTestAdserverInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-test-adserver');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-test-adserver', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-test-adserver', instance.name, ctx);
    return instance;
}
exports.createEyevinnTestAdserverInstance = createEyevinnTestAdserverInstance;
/**
 * Remove a Test Adserver instance
 *
 * @memberOf eyevinn-test-adserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the test-adserver to be removed
 */
async function removeEyevinnTestAdserverInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-test-adserver');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-test-adserver', name, serviceAccessToken);
}
exports.removeEyevinnTestAdserverInstance = removeEyevinnTestAdserverInstance;
/**
 * Get a Test Adserver instance
 *
 * @memberOf eyevinn-test-adserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the test-adserver to be retrieved
 * @returns {EyevinnTestAdserver} - Service instance
 */
async function getEyevinnTestAdserverInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-test-adserver');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-test-adserver', name, serviceAccessToken);
}
exports.getEyevinnTestAdserverInstance = getEyevinnTestAdserverInstance;
//# sourceMappingURL=eyevinn-test-adserver.js.map