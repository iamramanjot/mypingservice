"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnHlsMonitorInstance = exports.removeEyevinnHlsMonitorInstance = exports.createEyevinnHlsMonitorInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-hls-monitor
 * @description Service to monitor one or more HLS-streams for manifest errors and inconsistencies.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/Eyevinn/hls-monitor|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnHlsMonitorConfig
 * @property {string} name - Name of hls-monitor

 *
 */
/**
 * @typedef {Object} EyevinnHlsMonitor
 * @property {string} name - Name of the HLS Stream Monitor instance
 * @property {string} url - URL of the HLS Stream Monitor instance
 *
 */
/**
 * Create a new HLS Stream Monitor instance
 *
 * @memberOf eyevinn-hls-monitor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnHlsMonitorConfig} body - Service instance configuration
 * @returns {EyevinnHlsMonitor} - Service instance
 * @example
 * import { Context, createEyevinnHlsMonitorInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnHlsMonitorInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnHlsMonitorInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-hls-monitor');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-hls-monitor', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-hls-monitor', instance.name, ctx);
    return instance;
}
exports.createEyevinnHlsMonitorInstance = createEyevinnHlsMonitorInstance;
/**
 * Remove a HLS Stream Monitor instance
 *
 * @memberOf eyevinn-hls-monitor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the monitor to be removed
 */
async function removeEyevinnHlsMonitorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-hls-monitor');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-hls-monitor', name, serviceAccessToken);
}
exports.removeEyevinnHlsMonitorInstance = removeEyevinnHlsMonitorInstance;
/**
 * Get a HLS Stream Monitor instance
 *
 * @memberOf eyevinn-hls-monitor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the monitor to be retrieved
 * @returns {EyevinnHlsMonitor} - Service instance
 */
async function getEyevinnHlsMonitorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-hls-monitor');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-hls-monitor', name, serviceAccessToken);
}
exports.getEyevinnHlsMonitorInstance = getEyevinnHlsMonitorInstance;
//# sourceMappingURL=eyevinn-hls-monitor.js.map