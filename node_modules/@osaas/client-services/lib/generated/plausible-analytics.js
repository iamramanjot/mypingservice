"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPlausibleAnalyticsInstance = exports.removePlausibleAnalyticsInstance = exports.createPlausibleAnalyticsInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace plausible-analytics
 * @description Elevate your data privacy with Plausible Analytics. Get simple, clutter-free insights without compromising user privacy. Enjoy an easy, lightweight, and privacy-focused Google Analytics alternative!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} PlausibleAnalyticsConfig
 * @property {string} name - Name of analytics
 * @property {string} PostgreSQLUrl - PostgreSQLUrl
 * @property {string} ClickHouseDbUrl - ClickHouseDbUrl

 *
 */
/**
 * @typedef {Object} PlausibleAnalytics
 * @property {string} name - Name of the Plausible Analytics instance
 * @property {string} url - URL of the Plausible Analytics instance
 *
 */
/**
 * Create a new Plausible Analytics instance
 *
 * @memberOf plausible-analytics
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {PlausibleAnalyticsConfig} body - Service instance configuration
 * @returns {PlausibleAnalytics} - Service instance
 * @example
 * import { Context, createPlausibleAnalyticsInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createPlausibleAnalyticsInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createPlausibleAnalyticsInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('plausible-analytics');
    const instance = await (0, client_core_1.createInstance)(ctx, 'plausible-analytics', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('plausible-analytics', instance.name, ctx);
    return instance;
}
exports.createPlausibleAnalyticsInstance = createPlausibleAnalyticsInstance;
/**
 * Remove a Plausible Analytics instance
 *
 * @memberOf plausible-analytics
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the server to be removed
 */
async function removePlausibleAnalyticsInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('plausible-analytics');
    await (0, client_core_1.removeInstance)(ctx, 'plausible-analytics', name, serviceAccessToken);
}
exports.removePlausibleAnalyticsInstance = removePlausibleAnalyticsInstance;
/**
 * Get a Plausible Analytics instance
 *
 * @memberOf plausible-analytics
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the server to be retrieved
 * @returns {PlausibleAnalytics} - Service instance
 */
async function getPlausibleAnalyticsInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('plausible-analytics');
    return await (0, client_core_1.getInstance)(ctx, 'plausible-analytics', name, serviceAccessToken);
}
exports.getPlausibleAnalyticsInstance = getPlausibleAnalyticsInstance;
//# sourceMappingURL=plausible-analytics.js.map