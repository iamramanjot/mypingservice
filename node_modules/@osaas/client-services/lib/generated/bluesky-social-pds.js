"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBlueskySocialPdsInstance = exports.removeBlueskySocialPdsInstance = exports.createBlueskySocialPdsInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace bluesky-social-pds
 * @description Empower your network with self-hosted Bluesky PDS! Harness the power of AT Protocol to easily manage your data server. Seamless installation, full control, and enhanced security for your social media presence.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-Bluesky-Personal-Data-Server.html|Online docs} for further information
 */
/**
 * @typedef {Object} BlueskySocialPdsConfig
 * @property {string} name - Name of pds
 * @property {string} AdminPassword - AdminPassword
 * @property {string} [DnsName] - DnsName
 * @property {string} [EmailSmtpUrl] - EmailSmtpUrl
 * @property {string} [EmailFromAddress] - EmailFromAddress

 *
 */
/**
 * @typedef {Object} BlueskySocialPds
 * @property {string} name - Name of the Bluesky Personal Data Server instance
 * @property {string} url - URL of the Bluesky Personal Data Server instance
 *
 */
/**
 * Create a new Bluesky Personal Data Server instance
 *
 * @memberOf bluesky-social-pds
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {BlueskySocialPdsConfig} body - Service instance configuration
 * @returns {BlueskySocialPds} - Service instance
 * @example
 * import { Context, createBlueskySocialPdsInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createBlueskySocialPdsInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createBlueskySocialPdsInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluesky-social-pds');
    const instance = await (0, client_core_1.createInstance)(ctx, 'bluesky-social-pds', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('bluesky-social-pds', instance.name, ctx);
    return instance;
}
exports.createBlueskySocialPdsInstance = createBlueskySocialPdsInstance;
/**
 * Remove a Bluesky Personal Data Server instance
 *
 * @memberOf bluesky-social-pds
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the pds to be removed
 */
async function removeBlueskySocialPdsInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluesky-social-pds');
    await (0, client_core_1.removeInstance)(ctx, 'bluesky-social-pds', name, serviceAccessToken);
}
exports.removeBlueskySocialPdsInstance = removeBlueskySocialPdsInstance;
/**
 * Get a Bluesky Personal Data Server instance
 *
 * @memberOf bluesky-social-pds
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the pds to be retrieved
 * @returns {BlueskySocialPds} - Service instance
 */
async function getBlueskySocialPdsInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('bluesky-social-pds');
    return await (0, client_core_1.getInstance)(ctx, 'bluesky-social-pds', name, serviceAccessToken);
}
exports.getBlueskySocialPdsInstance = getBlueskySocialPdsInstance;
//# sourceMappingURL=bluesky-social-pds.js.map