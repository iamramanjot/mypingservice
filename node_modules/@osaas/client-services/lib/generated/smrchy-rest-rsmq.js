"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSmrchyRestRsmqInstance = exports.removeSmrchyRestRsmqInstance = exports.createSmrchyRestRsmqInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace smrchy-rest-rsmq
 * @description **Boost Your Productivity with REST rsmq**

Easily integrate with rsmq for efficient message queuing. No security worries, just seamless communication across platforms like php, .net, and more. Maximize performance now!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} SmrchyRestRsmqConfig
 * @property {string} name - Name of rest-rsmq
 * @property {string} RedisUrl - RedisUrl

 *
 */
/**
 * @typedef {Object} SmrchyRestRsmq
 * @property {string} name - Name of the Really Simple Message Queue instance
 * @property {string} url - URL of the Really Simple Message Queue instance
 *
 */
/**
 * Create a new Really Simple Message Queue instance
 *
 * @memberOf smrchy-rest-rsmq
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {SmrchyRestRsmqConfig} body - Service instance configuration
 * @returns {SmrchyRestRsmq} - Service instance
 * @example
 * import { Context, createSmrchyRestRsmqInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createSmrchyRestRsmqInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createSmrchyRestRsmqInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('smrchy-rest-rsmq');
    const instance = await (0, client_core_1.createInstance)(ctx, 'smrchy-rest-rsmq', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('smrchy-rest-rsmq', instance.name, ctx);
    return instance;
}
exports.createSmrchyRestRsmqInstance = createSmrchyRestRsmqInstance;
/**
 * Remove a Really Simple Message Queue instance
 *
 * @memberOf smrchy-rest-rsmq
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the message-queue to be removed
 */
async function removeSmrchyRestRsmqInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('smrchy-rest-rsmq');
    await (0, client_core_1.removeInstance)(ctx, 'smrchy-rest-rsmq', name, serviceAccessToken);
}
exports.removeSmrchyRestRsmqInstance = removeSmrchyRestRsmqInstance;
/**
 * Get a Really Simple Message Queue instance
 *
 * @memberOf smrchy-rest-rsmq
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the message-queue to be retrieved
 * @returns {SmrchyRestRsmq} - Service instance
 */
async function getSmrchyRestRsmqInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('smrchy-rest-rsmq');
    return await (0, client_core_1.getInstance)(ctx, 'smrchy-rest-rsmq', name, serviceAccessToken);
}
exports.getSmrchyRestRsmqInstance = getSmrchyRestRsmqInstance;
//# sourceMappingURL=smrchy-rest-rsmq.js.map