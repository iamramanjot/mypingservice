"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDocusealcoDocusealInstance = exports.removeDocusealcoDocusealInstance = exports.createDocusealcoDocusealInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace docusealco-docuseal
 * @description Streamline your document workflow with DocuSeal, the leading open-source solution for secure, mobile-optimized digital form filling and signing. Perfect for any business needing swift and seamless e-signatures.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} DocusealcoDocusealConfig
 * @property {string} name - Name of docuseal

 *
 */
/**
 * @typedef {Object} DocusealcoDocuseal
 * @property {string} name - Name of the Docuseal instance
 * @property {string} url - URL of the Docuseal instance
 *
 */
/**
 * Create a new Docuseal instance
 *
 * @memberOf docusealco-docuseal
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {DocusealcoDocusealConfig} body - Service instance configuration
 * @returns {DocusealcoDocuseal} - Service instance
 * @example
 * import { Context, createDocusealcoDocusealInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createDocusealcoDocusealInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createDocusealcoDocusealInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('docusealco-docuseal');
    const instance = await (0, client_core_1.createInstance)(ctx, 'docusealco-docuseal', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('docusealco-docuseal', instance.name, ctx);
    return instance;
}
exports.createDocusealcoDocusealInstance = createDocusealcoDocusealInstance;
/**
 * Remove a Docuseal instance
 *
 * @memberOf docusealco-docuseal
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the docuseal to be removed
 */
async function removeDocusealcoDocusealInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('docusealco-docuseal');
    await (0, client_core_1.removeInstance)(ctx, 'docusealco-docuseal', name, serviceAccessToken);
}
exports.removeDocusealcoDocusealInstance = removeDocusealcoDocusealInstance;
/**
 * Get a Docuseal instance
 *
 * @memberOf docusealco-docuseal
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the docuseal to be retrieved
 * @returns {DocusealcoDocuseal} - Service instance
 */
async function getDocusealcoDocusealInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('docusealco-docuseal');
    return await (0, client_core_1.getInstance)(ctx, 'docusealco-docuseal', name, serviceAccessToken);
}
exports.getDocusealcoDocusealInstance = getDocusealcoDocusealInstance;
//# sourceMappingURL=docusealco-docuseal.js.map