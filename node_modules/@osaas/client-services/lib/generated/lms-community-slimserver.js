"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLmsCommunitySlimserverInstance = exports.removeLmsCommunitySlimserverInstance = exports.createLmsCommunitySlimserverInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace lms-community-slimserver
 * @description Experience the ultimate audio streaming solution with Lyrion Music Server. Effortlessly stream local and internet music to any device, transforming your listening experience across platforms like Windows, macOS, and Linux.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} LmsCommunitySlimserverConfig
 * @property {string} name - Name of slimserver
 * @property {string} [MusicBucketUrl] - MusicBucketUrl
 * @property {string} [S3EndpointUrl] - S3EndpointUrl
 * @property {string} [S3AccessKeyId] - S3AccessKeyId
 * @property {string} [S3SecretAccessKey] - S3SecretAccessKey
 * @property {string} [S3Region] - S3Region

 *
 */
/**
 * @typedef {Object} LmsCommunitySlimserver
 * @property {string} name - Name of the Lyrion Music Server instance
 * @property {string} url - URL of the Lyrion Music Server instance
 *
 */
/**
 * Create a new Lyrion Music Server instance
 *
 * @memberOf lms-community-slimserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {LmsCommunitySlimserverConfig} body - Service instance configuration
 * @returns {LmsCommunitySlimserver} - Service instance
 * @example
 * import { Context, createLmsCommunitySlimserverInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createLmsCommunitySlimserverInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createLmsCommunitySlimserverInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('lms-community-slimserver');
    const instance = await (0, client_core_1.createInstance)(ctx, 'lms-community-slimserver', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('lms-community-slimserver', instance.name, ctx);
    return instance;
}
exports.createLmsCommunitySlimserverInstance = createLmsCommunitySlimserverInstance;
/**
 * Remove a Lyrion Music Server instance
 *
 * @memberOf lms-community-slimserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the slimserver to be removed
 */
async function removeLmsCommunitySlimserverInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('lms-community-slimserver');
    await (0, client_core_1.removeInstance)(ctx, 'lms-community-slimserver', name, serviceAccessToken);
}
exports.removeLmsCommunitySlimserverInstance = removeLmsCommunitySlimserverInstance;
/**
 * Get a Lyrion Music Server instance
 *
 * @memberOf lms-community-slimserver
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the slimserver to be retrieved
 * @returns {LmsCommunitySlimserver} - Service instance
 */
async function getLmsCommunitySlimserverInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('lms-community-slimserver');
    return await (0, client_core_1.getInstance)(ctx, 'lms-community-slimserver', name, serviceAccessToken);
}
exports.getLmsCommunitySlimserverInstance = getLmsCommunitySlimserverInstance;
//# sourceMappingURL=lms-community-slimserver.js.map