"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnWrtcEgressInstance = exports.removeEyevinnWrtcEgressInstance = exports.createEyevinnWrtcEgressInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-wrtc-egress
 * @description "Streamline your video services with Eyevinn's WebRTC Egress Endpoint Library. Perfect for standardized streaming with WHEP protocol. Enhance your Symphony Media Bridge connections now!"
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnWrtcEgressConfig
 * @property {string} name - Name of wrtc-egress
 * @property {string} SmbUrl - SmbUrl
 * @property {string} [SmbApiKey] - SmbApiKey

 *
 */
/**
 * @typedef {Object} EyevinnWrtcEgress
 * @property {string} name - Name of the Symphony Media Bridge WHEP Gateway instance
 * @property {string} url - URL of the Symphony Media Bridge WHEP Gateway instance
 *
 */
/**
 * Create a new Symphony Media Bridge WHEP Gateway instance
 *
 * @memberOf eyevinn-wrtc-egress
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnWrtcEgressConfig} body - Service instance configuration
 * @returns {EyevinnWrtcEgress} - Service instance
 * @example
 * import { Context, createEyevinnWrtcEgressInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnWrtcEgressInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnWrtcEgressInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-wrtc-egress');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-wrtc-egress', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-wrtc-egress', instance.name, ctx);
    return instance;
}
exports.createEyevinnWrtcEgressInstance = createEyevinnWrtcEgressInstance;
/**
 * Remove a Symphony Media Bridge WHEP Gateway instance
 *
 * @memberOf eyevinn-wrtc-egress
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the gateway to be removed
 */
async function removeEyevinnWrtcEgressInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-wrtc-egress');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-wrtc-egress', name, serviceAccessToken);
}
exports.removeEyevinnWrtcEgressInstance = removeEyevinnWrtcEgressInstance;
/**
 * Get a Symphony Media Bridge WHEP Gateway instance
 *
 * @memberOf eyevinn-wrtc-egress
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the gateway to be retrieved
 * @returns {EyevinnWrtcEgress} - Service instance
 */
async function getEyevinnWrtcEgressInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-wrtc-egress');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-wrtc-egress', name, serviceAccessToken);
}
exports.getEyevinnWrtcEgressInstance = getEyevinnWrtcEgressInstance;
//# sourceMappingURL=eyevinn-wrtc-egress.js.map