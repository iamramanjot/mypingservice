/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
export interface paths {
    '/': {
        /** Say hello */
        get: {
            responses: {
                /** The magical words! */
                200: {
                    schema: string;
                };
            };
        };
    };
    '/function-scenesinstance': {
        /** List all running function-scenes instances */
        get: {
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the function-scenes instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                    }[];
                };
                /** Default Response */
                500: {
                    schema: string;
                };
            };
        };
        /** Launch a new function-scenes instance */
        post: {
            parameters: {
                body: {
                    body?: {
                        /** @description Name of the function-scenes instance */
                        name: string;
                    };
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the function-scenes instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                    };
                };
                /** Default Response */
                500: {
                    schema: string;
                };
            };
        };
    };
    '/function-scenesinstance/{id}': {
        /** Obtain status and resource URLs for an function-scenes instance */
        get: {
            parameters: {
                path: {
                    /** Name of the function-scenes instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                200: {
                    schema: {
                        /** @description Name of the function-scenes instance */
                        name: string;
                        /** @description URL to instance API */
                        url: string;
                        resources: {
                            license: {
                                /** @description URL to license information */
                                url: string;
                            };
                            apiDocs?: {
                                /** @description URL to instance API documentation */
                                url: string;
                            };
                            app?: {
                                /** @description URL to instance application (GUI) */
                                url: string;
                            };
                        };
                    };
                };
                /** Default Response */
                404: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: string;
                };
            };
        };
        /** Stop and remove an function-scenes instance */
        delete: {
            parameters: {
                path: {
                    /** Name of the function-scenes instance */
                    id: string;
                };
            };
            responses: {
                /** Default Response */
                204: {
                    schema: string;
                };
                /** Default Response */
                500: {
                    schema: string;
                };
            };
        };
    };
}
export interface definitions {
}
export interface operations {
}
export interface external {
}
export type EyevinnFunctionScenes = paths['/function-scenesinstance/{id}']['get']['responses']['200']['schema'];
export type EyevinnFunctionScenesConfig = paths['/function-scenesinstance']['post']['parameters']['body']['body'];
import { Context } from '@osaas/client-core';
/**
 * @namespace eyevinn-function-scenes
 * @description A serverless media function to detect scene changes and extract keyframes in a video file or a stream.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/Eyevinn/function-scenes|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnFunctionScenesConfig
 * @property {string} name - Name of mediafunction

 *
 */
/**
 * @typedef {Object} EyevinnFunctionScenes
 * @property {string} name - Name of the Scene Detect Media Function instance
 * @property {string} url - URL of the Scene Detect Media Function instance
 *
 */
/**
 * Create a new Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnFunctionScenesConfig} body - Service instance configuration
 * @returns {EyevinnFunctionScenes} - Service instance
 * @example
 * import { Context, createEyevinnFunctionScenesInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnFunctionScenesInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
export declare function createEyevinnFunctionScenesInstance(ctx: Context, body: EyevinnFunctionScenesConfig): Promise<EyevinnFunctionScenes>;
/**
 * Remove a Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be removed
 */
export declare function removeEyevinnFunctionScenesInstance(ctx: Context, name: string): Promise<void>;
/**
 * Get a Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be retrieved
 * @returns {EyevinnFunctionScenes} - Service instance
 */
export declare function getEyevinnFunctionScenesInstance(ctx: Context, name: string): Promise<EyevinnFunctionScenes>;
//# sourceMappingURL=eyevinn-function-scenes.d.ts.map