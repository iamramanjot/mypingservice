"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClickhouseClickhouseInstance = exports.removeClickhouseClickhouseInstance = exports.createClickhouseClickhouseInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace clickhouse-clickhouse
 * @description Unlock real-time data insights effortlessly with ClickHouse, the lightning-fast, open-source columnar database. Elevate your analytics and make data-driven decisions with speed and precision like never before!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-ClickHouse.html|Online docs} for further information
 */
/**
 * @typedef {Object} ClickhouseClickhouseConfig
 * @property {string} name - Name of clickhouse
 * @property {string} [Db] - Db
 * @property {string} [User] - User
 * @property {string} [Password] - Password

 *
 */
/**
 * @typedef {Object} ClickhouseClickhouse
 * @property {string} name - Name of the ClickHouse Server instance
 * @property {string} url - URL of the ClickHouse Server instance
 *
 */
/**
 * Create a new ClickHouse Server instance
 *
 * @memberOf clickhouse-clickhouse
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {ClickhouseClickhouseConfig} body - Service instance configuration
 * @returns {ClickhouseClickhouse} - Service instance
 * @example
 * import { Context, createClickhouseClickhouseInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createClickhouseClickhouseInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createClickhouseClickhouseInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('clickhouse-clickhouse');
    const instance = await (0, client_core_1.createInstance)(ctx, 'clickhouse-clickhouse', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('clickhouse-clickhouse', instance.name, ctx);
    return instance;
}
exports.createClickhouseClickhouseInstance = createClickhouseClickhouseInstance;
/**
 * Remove a ClickHouse Server instance
 *
 * @memberOf clickhouse-clickhouse
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the clickhouse-server to be removed
 */
async function removeClickhouseClickhouseInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('clickhouse-clickhouse');
    await (0, client_core_1.removeInstance)(ctx, 'clickhouse-clickhouse', name, serviceAccessToken);
}
exports.removeClickhouseClickhouseInstance = removeClickhouseClickhouseInstance;
/**
 * Get a ClickHouse Server instance
 *
 * @memberOf clickhouse-clickhouse
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the clickhouse-server to be retrieved
 * @returns {ClickhouseClickhouse} - Service instance
 */
async function getClickhouseClickhouseInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('clickhouse-clickhouse');
    return await (0, client_core_1.getInstance)(ctx, 'clickhouse-clickhouse', name, serviceAccessToken);
}
exports.getClickhouseClickhouseInstance = getClickhouseClickhouseInstance;
//# sourceMappingURL=clickhouse-clickhouse.js.map