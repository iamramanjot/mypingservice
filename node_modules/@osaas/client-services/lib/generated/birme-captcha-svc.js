"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBirmeCaptchaSvcInstance = exports.removeBirmeCaptchaSvcInstance = exports.createBirmeCaptchaSvcInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace birme-captcha-svc
 * @description Enhance your security effortlessly with our reliable CAPTCHA Service! Easily generate and verify CAPTCHAs to protect against automated attacks. Quick setup, seamless integration, robust solution!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} BirmeCaptchaSvcConfig
 * @property {string} name - Name of captcha-svc

 *
 */
/**
 * @typedef {Object} BirmeCaptchaSvc
 * @property {string} name - Name of the Captcha Service instance
 * @property {string} url - URL of the Captcha Service instance
 *
 */
/**
 * Create a new Captcha Service instance
 *
 * @memberOf birme-captcha-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {BirmeCaptchaSvcConfig} body - Service instance configuration
 * @returns {BirmeCaptchaSvc} - Service instance
 * @example
 * import { Context, createBirmeCaptchaSvcInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createBirmeCaptchaSvcInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createBirmeCaptchaSvcInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-captcha-svc');
    const instance = await (0, client_core_1.createInstance)(ctx, 'birme-captcha-svc', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('birme-captcha-svc', instance.name, ctx);
    return instance;
}
exports.createBirmeCaptchaSvcInstance = createBirmeCaptchaSvcInstance;
/**
 * Remove a Captcha Service instance
 *
 * @memberOf birme-captcha-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the service to be removed
 */
async function removeBirmeCaptchaSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-captcha-svc');
    await (0, client_core_1.removeInstance)(ctx, 'birme-captcha-svc', name, serviceAccessToken);
}
exports.removeBirmeCaptchaSvcInstance = removeBirmeCaptchaSvcInstance;
/**
 * Get a Captcha Service instance
 *
 * @memberOf birme-captcha-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the service to be retrieved
 * @returns {BirmeCaptchaSvc} - Service instance
 */
async function getBirmeCaptchaSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-captcha-svc');
    return await (0, client_core_1.getInstance)(ctx, 'birme-captcha-svc', name, serviceAccessToken);
}
exports.getBirmeCaptchaSvcInstance = getBirmeCaptchaSvcInstance;
//# sourceMappingURL=birme-captcha-svc.js.map