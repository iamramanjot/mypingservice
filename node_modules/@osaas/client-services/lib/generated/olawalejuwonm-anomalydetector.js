"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOlawalejuwonmAnomalydetectorInstance = exports.removeOlawalejuwonmAnomalydetectorInstance = exports.createOlawalejuwonmAnomalydetectorInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace olawalejuwonm-anomalydetector
 * @description Safeguard your space with Anomaly Detector, a cutting-edge video surveillance solution. Experience real-time anomaly detection using advanced computer vision, ensuring privacy and reducing false alarms. Enhance security efficiently!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} OlawalejuwonmAnomalydetectorConfig
 * @property {string} name - Name of anomalydetector

 *
 */
/**
 * @typedef {Object} OlawalejuwonmAnomalydetector
 * @property {string} name - Name of the Anomaly Detector instance
 * @property {string} url - URL of the Anomaly Detector instance
 *
 */
/**
 * Create a new Anomaly Detector instance
 *
 * @memberOf olawalejuwonm-anomalydetector
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {OlawalejuwonmAnomalydetectorConfig} body - Service instance configuration
 * @returns {OlawalejuwonmAnomalydetector} - Service instance
 * @example
 * import { Context, createOlawalejuwonmAnomalydetectorInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createOlawalejuwonmAnomalydetectorInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createOlawalejuwonmAnomalydetectorInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('olawalejuwonm-anomalydetector');
    const instance = await (0, client_core_1.createInstance)(ctx, 'olawalejuwonm-anomalydetector', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('olawalejuwonm-anomalydetector', instance.name, ctx);
    return instance;
}
exports.createOlawalejuwonmAnomalydetectorInstance = createOlawalejuwonmAnomalydetectorInstance;
/**
 * Remove a Anomaly Detector instance
 *
 * @memberOf olawalejuwonm-anomalydetector
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the anomalydetector to be removed
 */
async function removeOlawalejuwonmAnomalydetectorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('olawalejuwonm-anomalydetector');
    await (0, client_core_1.removeInstance)(ctx, 'olawalejuwonm-anomalydetector', name, serviceAccessToken);
}
exports.removeOlawalejuwonmAnomalydetectorInstance = removeOlawalejuwonmAnomalydetectorInstance;
/**
 * Get a Anomaly Detector instance
 *
 * @memberOf olawalejuwonm-anomalydetector
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the anomalydetector to be retrieved
 * @returns {OlawalejuwonmAnomalydetector} - Service instance
 */
async function getOlawalejuwonmAnomalydetectorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('olawalejuwonm-anomalydetector');
    return await (0, client_core_1.getInstance)(ctx, 'olawalejuwonm-anomalydetector', name, serviceAccessToken);
}
exports.getOlawalejuwonmAnomalydetectorInstance = getOlawalejuwonmAnomalydetectorInstance;
//# sourceMappingURL=olawalejuwonm-anomalydetector.js.map