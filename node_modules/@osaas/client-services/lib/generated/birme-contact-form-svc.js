"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBirmeContactFormSvcInstance = exports.removeBirmeContactFormSvcInstance = exports.createBirmeContactFormSvcInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace birme-contact-form-svc
 * @description Streamline your communication with our Contact Form Service! Seamlessly send messages from your website directly to Slack. Easy-to-install, Docker-ready backend ensures you never miss a lead. Try it now!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} BirmeContactFormSvcConfig
 * @property {string} name - Name of service
 * @property {enum} Transport - Transport
 * @property {string} [SlackBotToken] - Slack Bot Token
 * @property {string} [SlackChannelId] - Slack Channel Id

 *
 */
/**
 * @typedef {Object} BirmeContactFormSvc
 * @property {string} name - Name of the Contact Form Service instance
 * @property {string} url - URL of the Contact Form Service instance
 *
 */
/**
 * Create a new Contact Form Service instance
 *
 * @memberOf birme-contact-form-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {BirmeContactFormSvcConfig} body - Service instance configuration
 * @returns {BirmeContactFormSvc} - Service instance
 * @example
 * import { Context, createBirmeContactFormSvcInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createBirmeContactFormSvcInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createBirmeContactFormSvcInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-contact-form-svc');
    const instance = await (0, client_core_1.createInstance)(ctx, 'birme-contact-form-svc', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('birme-contact-form-svc', instance.name, ctx);
    return instance;
}
exports.createBirmeContactFormSvcInstance = createBirmeContactFormSvcInstance;
/**
 * Remove a Contact Form Service instance
 *
 * @memberOf birme-contact-form-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the service to be removed
 */
async function removeBirmeContactFormSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-contact-form-svc');
    await (0, client_core_1.removeInstance)(ctx, 'birme-contact-form-svc', name, serviceAccessToken);
}
exports.removeBirmeContactFormSvcInstance = removeBirmeContactFormSvcInstance;
/**
 * Get a Contact Form Service instance
 *
 * @memberOf birme-contact-form-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the service to be retrieved
 * @returns {BirmeContactFormSvc} - Service instance
 */
async function getBirmeContactFormSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('birme-contact-form-svc');
    return await (0, client_core_1.getInstance)(ctx, 'birme-contact-form-svc', name, serviceAccessToken);
}
exports.getBirmeContactFormSvcInstance = getBirmeContactFormSvcInstance;
//# sourceMappingURL=birme-contact-form-svc.js.map