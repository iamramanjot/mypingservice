"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getUsefathomFathomInstance = exports.removeUsefathomFathomInstance = exports.createUsefathomFathomInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace usefathom-fathom
 * @description Introducing Fathom Lite - the popular, open-source website analytics tool with millions of downloads! Long-term maintenance, bug fixes, and cookie-free tracking set it apart. Get started today!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-Fathom-Lite.html|Online docs} for further information
 */
/**
 * @typedef {Object} UsefathomFathomConfig
 * @property {string} name - Name of fathom
 * @property {string} AdminEmail - AdminEmail
 * @property {string} AdminPassword - AdminPassword

 *
 */
/**
 * @typedef {Object} UsefathomFathom
 * @property {string} name - Name of the Fathom Lite instance
 * @property {string} url - URL of the Fathom Lite instance
 *
 */
/**
 * Create a new Fathom Lite instance
 *
 * @memberOf usefathom-fathom
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {UsefathomFathomConfig} body - Service instance configuration
 * @returns {UsefathomFathom} - Service instance
 * @example
 * import { Context, createUsefathomFathomInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createUsefathomFathomInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createUsefathomFathomInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('usefathom-fathom');
    const instance = await (0, client_core_1.createInstance)(ctx, 'usefathom-fathom', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('usefathom-fathom', instance.name, ctx);
    return instance;
}
exports.createUsefathomFathomInstance = createUsefathomFathomInstance;
/**
 * Remove a Fathom Lite instance
 *
 * @memberOf usefathom-fathom
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the collector to be removed
 */
async function removeUsefathomFathomInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('usefathom-fathom');
    await (0, client_core_1.removeInstance)(ctx, 'usefathom-fathom', name, serviceAccessToken);
}
exports.removeUsefathomFathomInstance = removeUsefathomFathomInstance;
/**
 * Get a Fathom Lite instance
 *
 * @memberOf usefathom-fathom
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the collector to be retrieved
 * @returns {UsefathomFathom} - Service instance
 */
async function getUsefathomFathomInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('usefathom-fathom');
    return await (0, client_core_1.getInstance)(ctx, 'usefathom-fathom', name, serviceAccessToken);
}
exports.getUsefathomFathomInstance = getUsefathomFathomInstance;
//# sourceMappingURL=usefathom-fathom.js.map