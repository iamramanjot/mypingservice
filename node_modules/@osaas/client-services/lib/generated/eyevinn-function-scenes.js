"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnFunctionScenesInstance = exports.removeEyevinnFunctionScenesInstance = exports.createEyevinnFunctionScenesInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-function-scenes
 * @description A serverless media function to detect scene changes and extract keyframes in a video file or a stream.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/Eyevinn/function-scenes|Online docs} for further information
 */
/**
 * @typedef {Object} EyevinnFunctionScenesConfig
 * @property {string} name - Name of mediafunction

 *
 */
/**
 * @typedef {Object} EyevinnFunctionScenes
 * @property {string} name - Name of the Scene Detect Media Function instance
 * @property {string} url - URL of the Scene Detect Media Function instance
 *
 */
/**
 * Create a new Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnFunctionScenesConfig} body - Service instance configuration
 * @returns {EyevinnFunctionScenes} - Service instance
 * @example
 * import { Context, createEyevinnFunctionScenesInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnFunctionScenesInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnFunctionScenesInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-scenes');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-function-scenes', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-function-scenes', instance.name, ctx);
    return instance;
}
exports.createEyevinnFunctionScenesInstance = createEyevinnFunctionScenesInstance;
/**
 * Remove a Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be removed
 */
async function removeEyevinnFunctionScenesInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-scenes');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-function-scenes', name, serviceAccessToken);
}
exports.removeEyevinnFunctionScenesInstance = removeEyevinnFunctionScenesInstance;
/**
 * Get a Scene Detect Media Function instance
 *
 * @memberOf eyevinn-function-scenes
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be retrieved
 * @returns {EyevinnFunctionScenes} - Service instance
 */
async function getEyevinnFunctionScenesInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-scenes');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-function-scenes', name, serviceAccessToken);
}
exports.getEyevinnFunctionScenesInstance = getEyevinnFunctionScenesInstance;
//# sourceMappingURL=eyevinn-function-scenes.js.map