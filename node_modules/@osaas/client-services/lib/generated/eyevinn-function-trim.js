"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnFunctionTrimInstance = exports.removeEyevinnFunctionTrimInstance = exports.createEyevinnFunctionTrimInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-function-trim
 * @description A serverless media function to trim single media file or an ABR bundle of media files and upload the output to an S3 bucket.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnFunctionTrimConfig
 * @property {string} name - Name of mediafunction
 * @property {string} awsRegion - AWS Region where output S3 bucket resides
 * @property {string} awsAccessKeyId - AWS Access Key Id for S3 bucket access
 * @property {string} awsSecretAccessKey - AWS Secret Access Key for S3 bucket access

 *
 */
/**
 * @typedef {Object} EyevinnFunctionTrim
 * @property {string} name - Name of the Trim Media instance
 * @property {string} url - URL of the Trim Media instance
 *
 */
/**
 * Create a new Trim Media instance
 *
 * @memberOf eyevinn-function-trim
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnFunctionTrimConfig} body - Service instance configuration
 * @returns {EyevinnFunctionTrim} - Service instance
 * @example
 * import { Context, createEyevinnFunctionTrimInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnFunctionTrimInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnFunctionTrimInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-trim');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-function-trim', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-function-trim', instance.name, ctx);
    return instance;
}
exports.createEyevinnFunctionTrimInstance = createEyevinnFunctionTrimInstance;
/**
 * Remove a Trim Media instance
 *
 * @memberOf eyevinn-function-trim
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be removed
 */
async function removeEyevinnFunctionTrimInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-trim');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-function-trim', name, serviceAccessToken);
}
exports.removeEyevinnFunctionTrimInstance = removeEyevinnFunctionTrimInstance;
/**
 * Get a Trim Media instance
 *
 * @memberOf eyevinn-function-trim
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the mediafunction to be retrieved
 * @returns {EyevinnFunctionTrim} - Service instance
 */
async function getEyevinnFunctionTrimInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-function-trim');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-function-trim', name, serviceAccessToken);
}
exports.getEyevinnFunctionTrimInstance = getEyevinnFunctionTrimInstance;
//# sourceMappingURL=eyevinn-function-trim.js.map