"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDatarheiRestreamerInstance = exports.removeDatarheiRestreamerInstance = exports.createDatarheiRestreamerInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace datarhei-restreamer
 * @description Introducing Restreamer: A free, self-hosting solution for seamless live streaming to multiple platforms like YouTube, Twitch, and more. Easy setup, diverse features, hardware support, and GDPR compliance make it a must-have.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} DatarheiRestreamerConfig
 * @property {string} name - Name of restreamer

 *
 */
/**
 * @typedef {Object} DatarheiRestreamer
 * @property {string} name - Name of the restreamer instance
 * @property {string} url - URL of the restreamer instance
 *
 */
/**
 * Create a new restreamer instance
 *
 * @memberOf datarhei-restreamer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {DatarheiRestreamerConfig} body - Service instance configuration
 * @returns {DatarheiRestreamer} - Service instance
 * @example
 * import { Context, createDatarheiRestreamerInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createDatarheiRestreamerInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createDatarheiRestreamerInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('datarhei-restreamer');
    const instance = await (0, client_core_1.createInstance)(ctx, 'datarhei-restreamer', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('datarhei-restreamer', instance.name, ctx);
    return instance;
}
exports.createDatarheiRestreamerInstance = createDatarheiRestreamerInstance;
/**
 * Remove a restreamer instance
 *
 * @memberOf datarhei-restreamer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the restreamer to be removed
 */
async function removeDatarheiRestreamerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('datarhei-restreamer');
    await (0, client_core_1.removeInstance)(ctx, 'datarhei-restreamer', name, serviceAccessToken);
}
exports.removeDatarheiRestreamerInstance = removeDatarheiRestreamerInstance;
/**
 * Get a restreamer instance
 *
 * @memberOf datarhei-restreamer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the restreamer to be retrieved
 * @returns {DatarheiRestreamer} - Service instance
 */
async function getDatarheiRestreamerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('datarhei-restreamer');
    return await (0, client_core_1.getInstance)(ctx, 'datarhei-restreamer', name, serviceAccessToken);
}
exports.getDatarheiRestreamerInstance = getDatarheiRestreamerInstance;
//# sourceMappingURL=datarhei-restreamer.js.map