"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDashIndustryForumLivesim2Instance = exports.removeDashIndustryForumLivesim2Instance = exports.createDashIndustryForumLivesim2Instance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace dash-industry-forum-livesim2
 * @description Elevate your streaming with livesim2, the next-gen DASH Live Source Simulator, offering infinite live streams, flexible content handling, and on-the-fly subtitles in multiple languages. Perfect for testing and demo purposes.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} DashIndustryForumLivesim2Config
 * @property {string} name - Name of livesim2

 *
 */
/**
 * @typedef {Object} DashIndustryForumLivesim2
 * @property {string} name - Name of the livesim2 instance
 * @property {string} url - URL of the livesim2 instance
 *
 */
/**
 * Create a new livesim2 instance
 *
 * @memberOf dash-industry-forum-livesim2
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {DashIndustryForumLivesim2Config} body - Service instance configuration
 * @returns {DashIndustryForumLivesim2} - Service instance
 * @example
 * import { Context, createDashIndustryForumLivesim2Instance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createDashIndustryForumLivesim2Instance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createDashIndustryForumLivesim2Instance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('dash-industry-forum-livesim2');
    const instance = await (0, client_core_1.createInstance)(ctx, 'dash-industry-forum-livesim2', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('dash-industry-forum-livesim2', instance.name, ctx);
    return instance;
}
exports.createDashIndustryForumLivesim2Instance = createDashIndustryForumLivesim2Instance;
/**
 * Remove a livesim2 instance
 *
 * @memberOf dash-industry-forum-livesim2
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the livesimulators to be removed
 */
async function removeDashIndustryForumLivesim2Instance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('dash-industry-forum-livesim2');
    await (0, client_core_1.removeInstance)(ctx, 'dash-industry-forum-livesim2', name, serviceAccessToken);
}
exports.removeDashIndustryForumLivesim2Instance = removeDashIndustryForumLivesim2Instance;
/**
 * Get a livesim2 instance
 *
 * @memberOf dash-industry-forum-livesim2
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the livesimulators to be retrieved
 * @returns {DashIndustryForumLivesim2} - Service instance
 */
async function getDashIndustryForumLivesim2Instance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('dash-industry-forum-livesim2');
    return await (0, client_core_1.getInstance)(ctx, 'dash-industry-forum-livesim2', name, serviceAccessToken);
}
exports.getDashIndustryForumLivesim2Instance = getDashIndustryForumLivesim2Instance;
//# sourceMappingURL=dash-industry-forum-livesim2.js.map