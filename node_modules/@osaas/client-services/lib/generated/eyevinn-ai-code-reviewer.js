"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnAiCodeReviewerInstance = exports.removeEyevinnAiCodeReviewerInstance = exports.createEyevinnAiCodeReviewerInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-ai-code-reviewer
 * @description Elevate your code quality with AI Code Reviewer! Leverage AI to review your code effortlessly, ensuring top-notch quality. Integrate easily with your cloud setup for seamless code enhancement.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnAiCodeReviewerConfig
 * @property {string} name - Name of ai-code-reviewer
 * @property {string} OpenAiApiKey - OpenAiApiKey
 * @property {string} [AssistantId] - AssistantId

 *
 */
/**
 * @typedef {Object} EyevinnAiCodeReviewer
 * @property {string} name - Name of the AI Code Reviewer instance
 * @property {string} url - URL of the AI Code Reviewer instance
 *
 */
/**
 * Create a new AI Code Reviewer instance
 *
 * @memberOf eyevinn-ai-code-reviewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnAiCodeReviewerConfig} body - Service instance configuration
 * @returns {EyevinnAiCodeReviewer} - Service instance
 * @example
 * import { Context, createEyevinnAiCodeReviewerInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnAiCodeReviewerInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnAiCodeReviewerInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-ai-code-reviewer');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-ai-code-reviewer', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-ai-code-reviewer', instance.name, ctx);
    return instance;
}
exports.createEyevinnAiCodeReviewerInstance = createEyevinnAiCodeReviewerInstance;
/**
 * Remove a AI Code Reviewer instance
 *
 * @memberOf eyevinn-ai-code-reviewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the code-reviewer to be removed
 */
async function removeEyevinnAiCodeReviewerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-ai-code-reviewer');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-ai-code-reviewer', name, serviceAccessToken);
}
exports.removeEyevinnAiCodeReviewerInstance = removeEyevinnAiCodeReviewerInstance;
/**
 * Get a AI Code Reviewer instance
 *
 * @memberOf eyevinn-ai-code-reviewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the code-reviewer to be retrieved
 * @returns {EyevinnAiCodeReviewer} - Service instance
 */
async function getEyevinnAiCodeReviewerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-ai-code-reviewer');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-ai-code-reviewer', name, serviceAccessToken);
}
exports.getEyevinnAiCodeReviewerInstance = getEyevinnAiCodeReviewerInstance;
//# sourceMappingURL=eyevinn-ai-code-reviewer.js.map