"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAlexbj7590stvInstance = exports.removeAlexbj7590stvInstance = exports.createAlexbj7590stvInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace alexbj75-90stv
 * @description Experience nostalgia with 90stv! Transform your FAST channels into a classic 90s TV viewing adventure, effortlessly with a quick Docker setup. Relive the golden era of television today!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} Alexbj7590stvConfig
 * @property {string} name - Name of 90stv

 *
 */
/**
 * @typedef {Object} Alexbj7590stv
 * @property {string} name - Name of the 90stv instance
 * @property {string} url - URL of the 90stv instance
 *
 */
/**
 * Create a new 90stv instance
 *
 * @memberOf alexbj75-90stv
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {Alexbj7590stvConfig} body - Service instance configuration
 * @returns {Alexbj7590stv} - Service instance
 * @example
 * import { Context, createAlexbj7590stvInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createAlexbj7590stvInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createAlexbj7590stvInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('alexbj75-90stv');
    const instance = await (0, client_core_1.createInstance)(ctx, 'alexbj75-90stv', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('alexbj75-90stv', instance.name, ctx);
    return instance;
}
exports.createAlexbj7590stvInstance = createAlexbj7590stvInstance;
/**
 * Remove a 90stv instance
 *
 * @memberOf alexbj75-90stv
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the 90stv to be removed
 */
async function removeAlexbj7590stvInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('alexbj75-90stv');
    await (0, client_core_1.removeInstance)(ctx, 'alexbj75-90stv', name, serviceAccessToken);
}
exports.removeAlexbj7590stvInstance = removeAlexbj7590stvInstance;
/**
 * Get a 90stv instance
 *
 * @memberOf alexbj75-90stv
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the 90stv to be retrieved
 * @returns {Alexbj7590stv} - Service instance
 */
async function getAlexbj7590stvInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('alexbj75-90stv');
    return await (0, client_core_1.getInstance)(ctx, 'alexbj75-90stv', name, serviceAccessToken);
}
exports.getAlexbj7590stvInstance = getAlexbj7590stvInstance;
//# sourceMappingURL=alexbj75-90stv.js.map