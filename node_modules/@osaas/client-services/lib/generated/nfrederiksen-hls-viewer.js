"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNfrederiksenHlsViewerInstance = exports.removeNfrederiksenHlsViewerInstance = exports.createNfrederiksenHlsViewerInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace nfrederiksen-hls-viewer
 * @description Effortlessly inspect and analyze HLS playlist manifests directly in your browser. No installation neededâ€”just paste your URL and dive into comprehensive metrics with ease. Ideal for streamlined streaming analysis!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} NfrederiksenHlsViewerConfig
 * @property {string} name - Name of hls-viewer

 *
 */
/**
 * @typedef {Object} NfrederiksenHlsViewer
 * @property {string} name - Name of the HLS Playlist Viewer instance
 * @property {string} url - URL of the HLS Playlist Viewer instance
 *
 */
/**
 * Create a new HLS Playlist Viewer instance
 *
 * @memberOf nfrederiksen-hls-viewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {NfrederiksenHlsViewerConfig} body - Service instance configuration
 * @returns {NfrederiksenHlsViewer} - Service instance
 * @example
 * import { Context, createNfrederiksenHlsViewerInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createNfrederiksenHlsViewerInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createNfrederiksenHlsViewerInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('nfrederiksen-hls-viewer');
    const instance = await (0, client_core_1.createInstance)(ctx, 'nfrederiksen-hls-viewer', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('nfrederiksen-hls-viewer', instance.name, ctx);
    return instance;
}
exports.createNfrederiksenHlsViewerInstance = createNfrederiksenHlsViewerInstance;
/**
 * Remove a HLS Playlist Viewer instance
 *
 * @memberOf nfrederiksen-hls-viewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the viewer to be removed
 */
async function removeNfrederiksenHlsViewerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('nfrederiksen-hls-viewer');
    await (0, client_core_1.removeInstance)(ctx, 'nfrederiksen-hls-viewer', name, serviceAccessToken);
}
exports.removeNfrederiksenHlsViewerInstance = removeNfrederiksenHlsViewerInstance;
/**
 * Get a HLS Playlist Viewer instance
 *
 * @memberOf nfrederiksen-hls-viewer
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the viewer to be retrieved
 * @returns {NfrederiksenHlsViewer} - Service instance
 */
async function getNfrederiksenHlsViewerInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('nfrederiksen-hls-viewer');
    return await (0, client_core_1.getInstance)(ctx, 'nfrederiksen-hls-viewer', name, serviceAccessToken);
}
exports.getNfrederiksenHlsViewerInstance = getNfrederiksenHlsViewerInstance;
//# sourceMappingURL=nfrederiksen-hls-viewer.js.map