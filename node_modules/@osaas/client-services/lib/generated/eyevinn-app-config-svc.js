"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnAppConfigSvcInstance = exports.removeEyevinnAppConfigSvcInstance = exports.createEyevinnAppConfigSvcInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-app-config-svc
 * @description Supercharge your application's efficiency by instantly providing configuration values with our Application Configuration Service. Integrate seamlessly with Redis, leverage cache control, and scale effortlessly.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnAppConfigSvcConfig
 * @property {string} name - Name of app-config-svc
 * @property {string} RedisUrl - RedisUrl

 *
 */
/**
 * @typedef {Object} EyevinnAppConfigSvc
 * @property {string} name - Name of the Application Config Service instance
 * @property {string} url - URL of the Application Config Service instance
 *
 */
/**
 * Create a new Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnAppConfigSvcConfig} body - Service instance configuration
 * @returns {EyevinnAppConfigSvc} - Service instance
 * @example
 * import { Context, createEyevinnAppConfigSvcInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnAppConfigSvcInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnAppConfigSvcInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-app-config-svc');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-app-config-svc', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-app-config-svc', instance.name, ctx);
    return instance;
}
exports.createEyevinnAppConfigSvcInstance = createEyevinnAppConfigSvcInstance;
/**
 * Remove a Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the config-service to be removed
 */
async function removeEyevinnAppConfigSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-app-config-svc');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-app-config-svc', name, serviceAccessToken);
}
exports.removeEyevinnAppConfigSvcInstance = removeEyevinnAppConfigSvcInstance;
/**
 * Get a Application Config Service instance
 *
 * @memberOf eyevinn-app-config-svc
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the config-service to be retrieved
 * @returns {EyevinnAppConfigSvc} - Service instance
 */
async function getEyevinnAppConfigSvcInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-app-config-svc');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-app-config-svc', name, serviceAccessToken);
}
exports.getEyevinnAppConfigSvcInstance = getEyevinnAppConfigSvcInstance;
//# sourceMappingURL=eyevinn-app-config-svc.js.map