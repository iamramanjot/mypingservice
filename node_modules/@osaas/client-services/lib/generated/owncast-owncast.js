"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOwncastOwncastInstance = exports.removeOwncastOwncastInstance = exports.createOwncastOwncastInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace owncast-owncast
 * @description Revolutionize your live streaming experience with Owncast! Take control over your content, interface, and audience with this self-hosted, open-source platform. Explore the possibilities today.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://owncast.online/quickstart/configure/|Online docs} for further information
 */
/**
 * @typedef {Object} OwncastOwncastConfig
 * @property {string} name - Name of owncast

 *
 */
/**
 * @typedef {Object} OwncastOwncast
 * @property {string} name - Name of the owncast instance
 * @property {string} url - URL of the owncast instance
 *
 */
/**
 * Create a new owncast instance
 *
 * @memberOf owncast-owncast
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {OwncastOwncastConfig} body - Service instance configuration
 * @returns {OwncastOwncast} - Service instance
 * @example
 * import { Context, createOwncastOwncastInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createOwncastOwncastInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createOwncastOwncastInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('owncast-owncast');
    const instance = await (0, client_core_1.createInstance)(ctx, 'owncast-owncast', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('owncast-owncast', instance.name, ctx);
    return instance;
}
exports.createOwncastOwncastInstance = createOwncastOwncastInstance;
/**
 * Remove a owncast instance
 *
 * @memberOf owncast-owncast
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the owncast to be removed
 */
async function removeOwncastOwncastInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('owncast-owncast');
    await (0, client_core_1.removeInstance)(ctx, 'owncast-owncast', name, serviceAccessToken);
}
exports.removeOwncastOwncastInstance = removeOwncastOwncastInstance;
/**
 * Get a owncast instance
 *
 * @memberOf owncast-owncast
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the owncast to be retrieved
 * @returns {OwncastOwncast} - Service instance
 */
async function getOwncastOwncastInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('owncast-owncast');
    return await (0, client_core_1.getInstance)(ctx, 'owncast-owncast', name, serviceAccessToken);
}
exports.getOwncastOwncastInstance = getOwncastOwncastInstance;
//# sourceMappingURL=owncast-owncast.js.map