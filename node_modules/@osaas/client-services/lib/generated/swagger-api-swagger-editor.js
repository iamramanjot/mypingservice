"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerApiSwaggerEditorInstance = exports.removeSwaggerApiSwaggerEditorInstance = exports.createSwaggerApiSwaggerEditorInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace swagger-api-swagger-editor
 * @description Next generation Swagger Editor is here! Edit OpenAPI definitions in JSON or YAML format in your browser and preview documentation in real time. Generate valid OpenAPI definitions for full Swagger tooling support. Upgrade to SwaggerEditor@5 for OpenAPI 3.1.0 support and enjoy a brand-new version built from the ground up. Get your Swagger Editor now!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} SwaggerApiSwaggerEditorConfig
 * @property {string} name - Name of swagger-editor
 * @property {string} [ApiDefinitionUrl] - ApiDefinitionUrl

 *
 */
/**
 * @typedef {Object} SwaggerApiSwaggerEditor
 * @property {string} name - Name of the Swagger Editor instance
 * @property {string} url - URL of the Swagger Editor instance
 *
 */
/**
 * Create a new Swagger Editor instance
 *
 * @memberOf swagger-api-swagger-editor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {SwaggerApiSwaggerEditorConfig} body - Service instance configuration
 * @returns {SwaggerApiSwaggerEditor} - Service instance
 * @example
 * import { Context, createSwaggerApiSwaggerEditorInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createSwaggerApiSwaggerEditorInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createSwaggerApiSwaggerEditorInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('swagger-api-swagger-editor');
    const instance = await (0, client_core_1.createInstance)(ctx, 'swagger-api-swagger-editor', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('swagger-api-swagger-editor', instance.name, ctx);
    return instance;
}
exports.createSwaggerApiSwaggerEditorInstance = createSwaggerApiSwaggerEditorInstance;
/**
 * Remove a Swagger Editor instance
 *
 * @memberOf swagger-api-swagger-editor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the editor to be removed
 */
async function removeSwaggerApiSwaggerEditorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('swagger-api-swagger-editor');
    await (0, client_core_1.removeInstance)(ctx, 'swagger-api-swagger-editor', name, serviceAccessToken);
}
exports.removeSwaggerApiSwaggerEditorInstance = removeSwaggerApiSwaggerEditorInstance;
/**
 * Get a Swagger Editor instance
 *
 * @memberOf swagger-api-swagger-editor
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the editor to be retrieved
 * @returns {SwaggerApiSwaggerEditor} - Service instance
 */
async function getSwaggerApiSwaggerEditorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('swagger-api-swagger-editor');
    return await (0, client_core_1.getInstance)(ctx, 'swagger-api-swagger-editor', name, serviceAccessToken);
}
exports.getSwaggerApiSwaggerEditorInstance = getSwaggerApiSwaggerEditorInstance;
//# sourceMappingURL=swagger-api-swagger-editor.js.map