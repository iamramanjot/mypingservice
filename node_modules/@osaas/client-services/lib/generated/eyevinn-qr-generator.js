"use strict";
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEyevinnQrGeneratorInstance = exports.removeEyevinnQrGeneratorInstance = exports.createEyevinnQrGeneratorInstance = void 0;
const client_core_1 = require("@osaas/client-core");
/**
 * @namespace eyevinn-qr-generator
 * @description Effortlessly create and customize QR codes with dynamic text and logos. Perfect for projects requiring quick updates. Launch your instance and deploy multiple codes seamlessly on the Open Source Cloud.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 *
 */
/**
 * @typedef {Object} EyevinnQrGeneratorConfig
 * @property {string} name - Name of qr-generator
 * @property {string} GotoUrl - GotoUrl
 * @property {string} [LogoUrl] - LogoUrl

 *
 */
/**
 * @typedef {Object} EyevinnQrGenerator
 * @property {string} name - Name of the QR Code Generator instance
 * @property {string} url - URL of the QR Code Generator instance
 *
 */
/**
 * Create a new QR Code Generator instance
 *
 * @memberOf eyevinn-qr-generator
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnQrGeneratorConfig} body - Service instance configuration
 * @returns {EyevinnQrGenerator} - Service instance
 * @example
 * import { Context, createEyevinnQrGeneratorInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await createEyevinnQrGeneratorInstance(ctx, { name: 'myinstance' });
 * console.log(instance.url);
 */
async function createEyevinnQrGeneratorInstance(ctx, body) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-qr-generator');
    const instance = await (0, client_core_1.createInstance)(ctx, 'eyevinn-qr-generator', serviceAccessToken, body);
    await (0, client_core_1.waitForInstanceReady)('eyevinn-qr-generator', instance.name, ctx);
    return instance;
}
exports.createEyevinnQrGeneratorInstance = createEyevinnQrGeneratorInstance;
/**
 * Remove a QR Code Generator instance
 *
 * @memberOf eyevinn-qr-generator
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the qr-generator to be removed
 */
async function removeEyevinnQrGeneratorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-qr-generator');
    await (0, client_core_1.removeInstance)(ctx, 'eyevinn-qr-generator', name, serviceAccessToken);
}
exports.removeEyevinnQrGeneratorInstance = removeEyevinnQrGeneratorInstance;
/**
 * Get a QR Code Generator instance
 *
 * @memberOf eyevinn-qr-generator
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the qr-generator to be retrieved
 * @returns {EyevinnQrGenerator} - Service instance
 */
async function getEyevinnQrGeneratorInstance(ctx, name) {
    const serviceAccessToken = await ctx.getServiceAccessToken('eyevinn-qr-generator');
    return await (0, client_core_1.getInstance)(ctx, 'eyevinn-qr-generator', name, serviceAccessToken);
}
exports.getEyevinnQrGeneratorInstance = getEyevinnQrGeneratorInstance;
//# sourceMappingURL=eyevinn-qr-generator.js.map